{"version":3,"file":"static/js/247.dde24ead.chunk.js","mappings":"6SAEMA,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAa,mCAAG,WAAOC,GAAP,+EACT,QACC,OAFQ,SAGJN,EAASO,IAAT,oBAFL,QAEK,YADJ,OACI,iBACwBD,IAJpB,uBAGnBE,EAHmB,EAGnBA,KAHmB,kBAMpBA,GANoB,2CAAH,sDASbC,EAAW,mCAAG,WAAOH,EAAOI,GAAd,yFACFV,EAASO,IAAT,6BAAmCD,EAAnC,kBAAiDI,IAD/C,uBACjBF,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,wDAUXG,EAAc,mCAAG,WAAOC,GAAP,yFACLZ,EAASO,IAAT,iBAAuBK,IADlB,uBACpBJ,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdK,EAAY,mCAAG,WAAOC,GAAP,yFACHd,EAASO,IAAT,iBAAuBO,EAAvB,aADG,uBAClBN,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZO,EAAY,mCAAG,WAAOH,GAAP,yFACHZ,EAASO,IAAT,iBAAuBK,EAAvB,aADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qD,yHCmBzB,UAnDkB,WAChB,OAAkCQ,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAeR,OAbAQ,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,kHAESV,EAAAA,EAAAA,IAAaC,GAFtB,gBAENU,EAFM,EAENA,KACRN,EAAaM,GAHC,gDAILC,EAJK,KAILA,SACTL,GAAS,GACTM,QAAQC,IAAIF,EAASjB,KAAKoB,SANZ,yDAAH,qDASfL,EAAUT,EACX,GAAE,CAACA,KAGF,2BACGK,IAAS,SAAC,UAAD,KACV,iCACCF,EAAUY,QACT,wBACGZ,EAAUa,MAAM,EAAG,IAAIC,KAAI,SAAAC,GAAK,OAC/B,2BACE,gBACEC,IACED,EAAME,aAAN,0CACuCF,EAAME,cAD7C,kCAIFC,IAAG,UAAKH,EAAMI,SAEhB,4BACE,uBAAIJ,EAAMI,QACV,wCACa,mBACX,0BAAOJ,EAAMK,oBAbVL,EAAMM,QADgB,OAqBnC,wCAIP,C,0CCnDD,UALqB,WACnB,OACE,0CAEH,C","sources":["Api/api.js","components/Cast/Cast.jsx","components/pages/NotFoundPage/NotFoundPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: 'ac91775ba29254b7e75060011bf34a90',\n  },\n});\n\nexport const fetchTrending = async (page) => {\n  const mediaType = 'movie';\n  const timeWindow = 'week';\n  const { data } = await instance.get(\n    `/trending/${mediaType}/${timeWindow}?page=${page}`\n  );\n  return data;\n};\n\nexport const fetchMovies = async (page , query) => {\n  const { data } = await instance.get(`/search/movie?page=${page}&query=${query}`);\n  return data;\n};\n\nexport const fetchGenres = async () => {\n  const { data } = await instance.get(`/genre/movie/list`);\n  return data.genres;\n};\n\nexport const fetchMovieById = async (movieID) => {\n  const { data } = await instance.get(`/movie/${movieID}`);\n  return data;\n};\n\nexport const fetchCredits = async (movieId) => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async (movieID) => {\n  const { data } = await instance.get(`/movie/${movieID}/reviews`);\n  return data;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport NotFoundPage from 'components/pages/NotFoundPage/NotFoundPage';\n\nimport { fetchCredits } from 'Api/api';\n\nconst MovieCast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const { cast } = await fetchCredits(movieId);\n        setMovieCast(cast);\n      } catch ({ response }) {\n        setError(true);\n        console.log(response.data.message);\n      }\n    };\n    fetchCast(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <NotFoundPage />}\n      <h2>Cast</h2>\n      {movieCast.length ? (\n        <ul>\n          {movieCast.slice(0, 12).map(actor => (\n            <li key={actor.cast_id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                    : `https://via.placeholder.com/200`\n                }\n                alt={`${actor.name}`}\n              />\n              <div>\n                <p>{actor.name}</p>\n                <p>\n                  Character: <br />\n                  <span>{actor.character}</span>\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No results</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieCast;\n","const NotFoundPage = () => {\n  return (\n    <h1>Not Found Page</h1>\n  )\n}\nexport default NotFoundPage;\n"],"names":["instance","axios","baseURL","params","api_key","fetchTrending","page","get","data","fetchMovies","query","fetchMovieById","movieID","fetchCredits","movieId","fetchReviews","useState","movieCast","setMovieCast","error","setError","useParams","useEffect","fetchCast","cast","response","console","log","message","length","slice","map","actor","src","profile_path","alt","name","character","cast_id"],"sourceRoot":""}