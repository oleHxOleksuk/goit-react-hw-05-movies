{"version":3,"file":"static/js/955.06d98bfc.chunk.js","mappings":"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","sources":["Api/api.js","Shared/PaginationStyle.styled.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Search/search.styled.js","components/Search/initialState.js","components/Search/Search.jsx","components/pages/MoviesPage/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: 'ac91775ba29254b7e75060011bf34a90',\n  },\n});\n\nexport const fetchTrending = async (page) => {\n  const mediaType = 'movie';\n  const timeWindow = 'week';\n  const { data } = await instance.get(\n    `/trending/${mediaType}/${timeWindow}?page=${page}`\n  );\n  return data;\n};\n\nexport const fetchMovies = async (page , query) => {\n  const { data } = await instance.get(`/search/movie?page=${page}&query=${query}`);\n  return data;\n};\n\nexport const fetchGenres = async () => {\n  const { data } = await instance.get(`/genre/movie/list`);\n  return data.genres;\n};\n\nexport const fetchMovieById = async (movieID) => {\n  const { data } = await instance.get(`/movie/${movieID}`);\n  return data;\n};\n\nexport const fetchCredits = async (movieId) => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async (movieID) => {\n  const { data } = await instance.get(`/movie/${movieID}/reviews`);\n  return data;\n};\n","import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate'\n\nexport const PaginationStyle = styled(ReactPaginate)`\n  display: flex;\n  list-style: none;\n  justify-content: flex-start;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  font-size: 16px;\n  font-weight: 700;\n  @media (max-width: 720px) {\n    flex-wrap: wrap;\n  }\n  & li {\n    color: ${p => 'black'};\n    transition: color 250ms linear;\n    :hover:not(.disabled) {\n      color: ${p => '#333652'};\n    }\n  }\n  & .activePage {\n    color: ${p => '#FAD02C'};\n  }\n  & a {\n    padding: 0 8px;\n    cursor: pointer;\n  }\n  & a.disabled {\n    cursor: default;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const StyleList = styled.ul`\nlist-style: none;\ndisplay:flex;\nflex-direction:column;\ngap:10px;\npadding:10px 5px;\nmargin-left: 15px;\n`\n","import { StyleList } from './MovieList.styled'\n\nimport { NavLink } from 'react-router-dom'\nimport { useLocation } from 'react-router-dom'\n\nconst MovieList = ({result}) => {\n  const location = useLocation();\n  const element = result.map(({id, title}) => (\n    <li key={id}>\n      <NavLink to={`/movies/${id}`}state={{ from: location }}>\n        <p>{title}</p>\n      </NavLink>\n    </li>\n  ));\n  return <StyleList>{element}</StyleList>;\n};\n\nexport default MovieList;\n\nMovieList.defaultProps = {\n  results: [],\n};\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #e98b10;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Label = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","const initialState = { search: '' };\n\nexport default initialState\n","import { useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\n\nimport * as search from './search.styled';\nimport initialState from './initialState';\n\nconst Search = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value.trim() };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (state.search.trim().toLowerCase() === '') {\n      return toast.warn('Enter correct search!');\n    }\n\n    onSubmit(state.search);\n    setState({ ...initialState });\n  };\n\n  const { query } = state;\n  \n  return (\n    <search.Header>\n      <search.Form onSubmit={handleSubmit}>\n        <search.SearchButton type=\"submit\" aria-label=\"search-button\">\n          <search.Label>\n            <AiOutlineSearch />\n          </search.Label>\n        </search.SearchButton>\n        <search.Input\n          name=\"search\"\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          required\n          onChange={handleChange}\n        />\n      </search.Form>\n    </search.Header>\n  );\n};\n\nexport default memo(Search);\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useState, useMemo, useCallback } from \"react\";\n\nimport { Notify } from \"notiflix\";\n\nimport { fetchMovies } from \"Api/api\";\n\nimport Search from \"components/Search/Search\";\nimport MovieList from \"components/MovieList/MovieList\";\n\nimport Loader from \"Shared/Loader/Loader\";\nimport { PaginationStyle } from \"Shared/PaginationStyle.styled\";\n\n\n\n\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  const { query, page } = params;\n  const currentPage = Number(page) ? Number(page) : 1;\n  const [totalPages, setTotalPages] = useState(0);\n  const [movie, setMovie] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    try {\n      setLoading(true);\n      const getMovie = async page => {\n        const { results, total_pages } = await fetchMovies(page, query);\n        if (!results.length) {\n          Notify.failure('No found');\n        } else {\n          setTotalPages(total_pages);\n          setMovie(results);\n        }\n      };\n      getMovie(currentPage, query);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [query, currentPage, page]);\n\n  const onSearchMovie = useCallback(\n    query => {\n      if (query !== searchQuery) {\n        setSearchParams({ query, page: 1 });\n        setMovie([]);\n        setSearchQuery(query);\n      } else {\n        Notify.warning('you have already entered this query!');\n      }\n    },\n    [setSearchParams, searchQuery]\n  );\n\n  const handlePageClick = e => {\n    setSearchParams({ query, page: e.selected + 1 });\n  };\n\n  return (\n    <main style={{paddingBottom:20,}}>\n      <Search onSubmit={onSearchMovie} />\n      <MovieList results={movie} />\n      {error && <p>Error{error.message}</p>}\n      {totalPages > 1 && (\n        <PaginationStyle\n          breakLabel=\"...\"\n          nextLabel=\">\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={3}\n          pageCount={totalPages}\n          previousLabel=\"<\"\n          renderOnZeroPageCount={null}\n          disabledLinkClassName=\"disabled\"\n          activeClassName=\"activePage\"\n          forcePage={currentPage - 1}\n        />\n      )}\n      {loading && <Loader />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["instance","axios","baseURL","params","api_key","fetchTrending","page","get","data","fetchMovies","query","fetchMovieById","movieID","fetchCredits","movieId","fetchReviews","PaginationStyle","styled","ReactPaginate","p","StyleList","MovieList","result","location","useLocation","element","map","id","title","to","state","from","defaultProps","results","Header","Form","SearchButton","Label","Input","search","Search","onSubmit","useState","initialState","setState","e","preventDefault","trim","toLowerCase","toast","type","name","value","autoComplete","autoFocus","placeholder","required","onChange","target","prevState","memo","useSearchParams","searchParams","setSearchParams","useMemo","Object","fromEntries","currentPage","Number","totalPages","setTotalPages","movie","setMovie","searchQuery","setSearchQuery","loading","setLoading","error","setError","useEffect","getMovie","total_pages","length","Notify","err","message","onSearchMovie","useCallback","style","paddingBottom","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","disabledLinkClassName","activeClassName","forcePage","Loader"],"sourceRoot":""}